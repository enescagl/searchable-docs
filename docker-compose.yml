version: "3.8"

services:
  # Development app service
  app-dev:
    profiles: ["dev"]
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=file:/app/local.db
      - PORT=3000
      - HOST=0.0.0.0
    command: pnpm run dev
    depends_on:
      - redis
      - libsql
    networks:
      - app-network

  # Production app service
  app:
    profiles: ["prod"]
    build:
      context: .
      target: production
    ports:
      - "3000:80"
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=file:/app/local.db
    depends_on:
      - redis
      - libsql
    networks:
      - app-network

  # Nginx - used in both dev and prod
  nginx:
    profiles: ["dev", "prod"]
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./public:/usr/share/nginx/html
    depends_on:
      - ${APP_SERVICE:-app}
    networks:
      - app-network

  # Redis - used in both dev and prod
  redis:
    profiles: ["dev", "prod"]
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network

  # LibSQL - used in both dev and prod
  libsql:
    profiles: ["dev", "prod"]
    image: ghcr.io/tursodatabase/libsql-server:latest
    platform: linux/amd64
    environment:
      - SQLD_NODE=primary
    volumes:
      - libsql_data:/var/lib/sqld
      - ./local.db:/app/local.db
    ports:
      - "8089:8080"
      - "5001:5001"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
  libsql_data:
